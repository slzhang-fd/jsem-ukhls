% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dylanie.R
\name{dylanie_model}
\alias{dylanie_model}
\title{Paralleled full Bayesian estimation for multivariate dyads data analysis (DyLAnIE).}
\usage{
dylanie_model(formula, data, initvals = NULL, mcmc_len, verbose = F)
}
\arguments{
\item{formula}{an object of class "formula" similar to linear regression.
It is a symbolic description of the covariates set used in the model.}

\item{data}{a list for data input. It contains binary responses, covaraites
matrix, a constraint matrix (1 for free parameters, 0 for fixed zero) for
coefficient parameter $\phi\xi$ and pre estimated measurement parameters. See
the following example for more details.}

\item{initvals}{a list for initial values of parameters and random variables.
If NULL, random initial values will be generated except for the measurement
parameters.}

\item{mcmc_len}{an integer specifies the length of MCMC draws}

\item{verbose}{boolen variable, whether enable verbose mode}
}
\value{
The function returns a list with the following components:
\describe{
\item{g_draws}{A matrix containing MCMC draws for coefficient parameters $\phi_\xi$.}
\item{b_tp_draws}{A matrix containing MCMC draws for coefficient parameters $\phi_\eta1$.}
\item{b_fp_draws}{A matrix containing MCMC draws for coefficient parameters $\phi_\eta2$.}
\item{sig2_tp_draws}{A matrix containing MCMC draws for variance of $\eta_1$.}
\item{sig2_fp_draws}{A matrix containing MCMC draws for variance of $\eta_2$.}
\item{rho_draws}{A matrix containing MCMC draws for correlation of $\eta_1$ and $\eta_2$.}
\item{e12_last}{A matrix containing MCMC draws for continuous random variables $\eta_1$ and $\eta_2$.}
\item{xi_last}{A matrix containing MCMC draws for discrete random variables $\xi$.}
}
}
\description{
The program perform estimation for a general latent variable modelling framework.
This framework is intended for for the analysis of
multivariate binary data on dyads, which can also handle zero inflation and
non-equivalence of measurement.
}
\examples{
\dontrun{
load("jags.rda")
ytp <- jags.data$ytp
yfp <- jags.data$yfp
N <- nrow(ytp)
J <- ncol(ytp)

x_covariates <- matrix(0, N, 14)
x_covariates[,1] <- 1
x_covariates[,2] <- jags.data$female
x_covariates[,3] <- jags.data$distlong
x_covariates[,4] <- jags.data$age40
x_covariates[,5] <- jags.data$partner
x_covariates[,6] <- jags.data$clt2
x_covariates[,7] <- jags.data$c2to4
x_covariates[,8] <- jags.data$c5to10
x_covariates[,9] <- jags.data$c11to16
x_covariates[,10] <- jags.data$cgt16
x_covariates[,11] <- jags.data$jbs == 3
x_covariates[,12] <- jags.data$jbs == 4
x_covariates[,13] <- jags.data$page70
x_covariates[,14] <- jags.data$plive \%in\% c(3, 4, 5, 7, 9)
colnames(x_covariates) <- c('intercept', 'female', 'distlong', 'age40', 'partner', 'clt2', 'c2to4', 
                            'c5to10', 'c11to16', 'cgt16', 'jbs3', 'jbs4', 'page70', 'plive')
x_covariates <- as.data.frame(x_covariates)
xi <- as.vector(xi.start)

## set the fixed parameters for the measurement model
# loadings
lambda_tp <- c(1.159, 1.873, 1.073, 1.560, 1.640, 1, 0.625, 0.588)
lambda_fp <- c(0.833, 1.293, 0.760, 0.453, 0.770, 1, 0.604, 0.578)

# coefficients
a_tp <- matrix(0, 5, 8)
a_fp <- matrix(0, 5, 8)

# intercepts
a_tp[1,] <- c(2.012, 1.694, -0.329, -2.335, -0.965, 0, 0.907, -1.291)
a_fp[1,] <- c(1.855, 2.621, 2.107, 2.473, 0.488, 0, 0.514, 0.991)

# female
a_tp[2,] <- c(-0.635, 0, 0, 0, 0, 0, -1.529, -0.642)
a_fp[2,] <- c(0, 0, -0.222, 0, 0, 0, 0, -0.322)

# distlong
a_tp[3,] <- c(-0.831, -0.128, 0.415, 0, 0.466, 0, 0.038, 0)
a_fp[3,] <- c(1.100, 0.603, 1.997, 0.689, 2.536, 0, -0.685, 0)

# etaXfemale
a_tp[4,] <- c(-0.461, 0, 0, 0, 0, 0, 0.090, -0.030)
a_fp[4,] <- c(0, 0, 0.054, 0, 0, 0, 0, -0.057)

# etaXdistlong
a_tp[5,] <- c(0.905, 1.225, 0.952, 0, 0.626, 0, 0.535, 0)
a_fp[5,] <- c(0.898, 0.740, 1.039, 0.618, 1.213, 0, 0.049, 0)

beta_tp <- cbind(rep(1, N), jags.data$female, jags.data$distlong) \%*\% a_tp[1:3,]
beta_fp <- cbind(rep(1, N), jags.data$female, jags.data$distlong) \%*\% a_fp[1:3,]

alpha_tp <- cbind(rep(1, N), jags.data$female, jags.data$distlong) \%*\% rbind(lambda_tp, a_tp[4:5,])
alpha_fp <- cbind(rep(1, N), jags.data$female, jags.data$distlong) \%*\% rbind(lambda_fp, a_fp[4:5,])

g_free_ind <- matrix(1, 14, 4)
g_free_ind[,1] <- g_free_ind[3,2] <- g_free_ind[6,3] <- g_free_ind[7,3] <- 0

aidrp_data <- list(ytp=ytp, yfp = yfp, x_covariates = x_covariates,
                   g_free_ind = g_free_ind, beta_tp = beta_tp, beta_fp = beta_fp,
                   alpha_tp = alpha_tp, alpha_fp = alpha_fp, xi=xi)

dylanie_res <- dylanie_model(~female, data=aidrp_data, mcmc_len = 50, verbose = F)
}
}
\references{
Kuha, J., Zhang, S., & Steele, F. (2021). manuscript
\emph{Journal of the American Statistical Association} <doi: >.
}
